class Solution {
    public int rowWithMax1s(int[][] mat) {
        int maxOnes = -1;
        int index = -1;
        int n = mat[0].length;

        for (int i = 0; i < mat.length; i++) {
            int firstOneIndex = firstOne(mat[i]);
            if (firstOneIndex != -1) {
                int onesCount = n - firstOneIndex;
                if (onesCount > maxOnes) {
                    maxOnes = onesCount;
                    index = i;
                }
            }
        }
        return index;
    }

    // Binary search to find first occurrence of 1 in a sorted row
    private int firstOne(int[] row) {
        int low = 0, high = row.length - 1;
        int ans = -1;
        while (low <= high) {
            int mid = (low + high) / 2;
            if (row[mid] == 1) {
                ans = mid;
                high = mid - 1; // search for earlier 1
            } else {
                low = mid + 1;
            }
        }
        return ans;
    }
}
