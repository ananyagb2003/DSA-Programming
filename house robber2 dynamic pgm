class Solution {
    public int solve(int[] a){
        int n=a.length;
        if(n<2){
            return a[0];
        }
        int[] dp=new int[n];
        dp[0]=a[0];
        dp[1]=Math.max(a[0],a[1]);
        for(int i=2;i<n;i++){
            dp[i]=Math.max(dp[i-2]+a[i],dp[i-1]);
        }
        return dp[n-1];
    }
    public int rob(int[] nums) {
        int l=nums.length;
        if(l<2){
            return nums[0];
        }
        int[] skiplasthouse=new int[l-1];
        int[] skipfirsthouse=new int[l-1];
        for(int i=0;i<l-1;i++){
            skiplasthouse[i]=nums[i];
            skipfirsthouse[i]=nums[i+1];
        }
        int loot1=solve(skiplasthouse);
        int loot2=solve(skipfirsthouse);
        return Math.max(loot1,loot2);
    }
}
